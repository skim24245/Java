package kr.ac.kopo.day01;

/*
 기본자료형
  논리형: boolean
  문자형: char
  정수형: byte, short, int(기본), long
  실수형: float, double(기본)
  
  
  변수 선언
  자료형 변수명;
  
  변수 대입
  변수명 = 값;
  변수 초기화 (선언과 동시에 값 대입)
  자료형 변수형 =값;
  같은 자료형의 변수 여러개 선언
  자료형 변수형 1, 변수형 2, 변수명 3, ....;
 */


/*변수형 컴퓨터 메모리
기본 자료형 (boolean, char, short, long ) : stack = 공간을 만들면 공간을 저장할 수 있는 이름이 있음. 변수명이 존재함. / 변수를 위한 변수명/ ex) 빌라 이름 및 아파트 이름 . 컴퓨터 입장에선 변수명이 중요한게 아니라 시작점이 중요한거임! 
객체에서는 주로 heap =나중에서는 heap이 중요함. : 변수명이 존재하지 않음. ex) 컨테이너, 주소값 알 수 없음. 따라서 스택보다 훨씬 복잡한 
 메소드는 공유형 메모리 
컴퓨터 입장에서는 변수명와 변수를 구분하는 역할을 못함 (ex= 주공아파트 1공 단지에 있는 곳으로
메모리의 시작 주소 = 여기서부터 4byte공간 내 공간. 여기서부터 8byte가 내 공간.

*/
public class VariableMain {
	  char b; //	 * 클래스 안에 선언하면 멤버 변수라고 함.  자동초기화 o  또는 필드라고 부름.
	 
	public static void main(String[] args) {
	
		char a; //초기화 x . a라는 공간은 만들어 놨지만 그 공간에 값은 모르니까 garbage 라고 칭한다. 그리고 에러가 남. 메소드 안에서 선언된 ㄱ값 =지역 변수라고 칭함, 이건 자동으로 초기화가 안됌
		
		a = 'A';// 메소드 안에 선언된 지역 변수는 초기화가 안되니까 초기화를 따로 해줘야 함.
		System.out.println(a);
		//정수 123를 저장하기 위한 변수 C 선언
		int c =123;
		
		/*실수 3개를 저장하기 위한 변수 d1, d2, d3 선언
		double d1;
		double d2;
		double d3;
		*/
		
		
		/* 중간에 초기값이 있고 뒤에는 없을 경우
		d1이랑 d3을 맨 앞에 함께 쓰던가 
		*/
		
		/*
		 문자열을 저장하기 위해 클래스 스트링
		 */
		double d1, d2 = 12.34, d3 =0;
		
		System.out.println(a);
		System.out.println(c);
		
	}

}
